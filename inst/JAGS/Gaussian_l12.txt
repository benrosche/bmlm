model {
  
  # Likelihood
  for(j in 1:n.l2) {
    
    # Linear regression
    Y[j] ~ dnorm(mu[j], tau.l2)
    
    # mu = aggregated(l1) + l2
    mu[j] <- inprod(l1[l1i1[j]:l1i2[j]], w[l1i1[j]:l1i2[j]]) + l2[j] 
    
    # Level 2: systematic component
    l2[j] <- inprod(X.l2[j,], b.l2)
  }
  
  # Level 1: systematic + random component, weights
  for(i in 1:n.l1) {
    l1[i] <- inprod(X.l1[i,], b.l1) + re.l1[l1id[i]] 
    
    uw[i] <- 1/X.w[i,1]
    
    w[i] <- uw[i] / sum(uw[l1i1.l1[i]:l1i2.l1[i]])
  }
  
  # Distribution of random effects
  for (i in 1:n.ul1) {
    re.l1[i] ~ dnorm(0, tau.l1)
  }
  
  # Priors regression coefficients, posterior predictive p-values
  for(x in 1:n.Xl1) {
    b.l1[x] ~ dnorm(0,0.0001)
    ppp.b.l1[x] <- step(b.l1[x])
  }
  
  for(x in 1:n.Xl2) {
    b.l2[x] ~ dnorm(0,0.0001)
    ppp.b.l2[x] <- step(b.l2[x])
  }

  b.w

  # Priors variance terms
  tau.l1 ~ dscaled.gamma(25, 1)
  sigma.l1 <- 1/sqrt(tau.l1)
  
  tau.l2 ~ dscaled.gamma(25, 1)
  sigma.l2 <- 1/sqrt(tau.l2)
  
}
